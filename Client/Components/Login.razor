@page "/login"
@inject Blazored.LocalStorage.ILocalStorageService LocalStorage
@inject HttpClient HttpClient
@inject NavigationManager Navigation

<h3>Вход в систему</h3>

@if (errorMessage != null)
{
    <div class="alert alert-danger">@errorMessage</div>
}

<EditForm Model="registerDTO" OnValidSubmit="HandleLogin">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <div class="form-group">
        <label for="email">Email</label>
        <InputText id="email" class="form-control" @bind-Value="registerDTO.Email" />
        <ValidationMessage For="@(() => registerDTO.Email)" />
    </div>

    <div class="form-group">
        <label for="password">Пароль</label>
        <InputText id="password" type="password" class="form-control" @bind-Value="registerDTO.Password" />
        <ValidationMessage For="@(() => registerDTO.Password)" />
    </div>

    <button type="submit" class="btn btn-primary">Войти</button>
</EditForm>

@code {
    private RegisterDTO registerDTO = new RegisterDTO();
    private string errorMessage;

    private async Task HandleLogin()
    {
        var response = await HttpClient.PostAsJsonAsync("https://localhost:7195/api/Users/login", registerDTO);

        if (response.IsSuccessStatusCode)
        {
            var token = await response.Content.ReadAsStringAsync();
            // Сохраните токен в локальном хранилище
            await LocalStorage.SetItemAsync("token", token);
            Navigation.NavigateTo("/");
        }
        else
        {
            errorMessage = "Неверный email или пароль.";
        }
    }
}
