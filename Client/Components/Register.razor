@page "/register"
@inject Blazored.LocalStorage.ILocalStorageService LocalStorage
@inject HttpClient HttpClient
@inject NavigationManager Navigation

<h3>Регистрация</h3>

@if (errorMessage != null)
{
    <div class="alert alert-danger">@errorMessage</div>
}

<EditForm Model="registerDTO" OnValidSubmit="HandleRegister">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <div class="form-group">
        <label for="email">Email</label>
        <InputText id="email" class="form-control" @bind-Value="registerDTO.Email" />
        <ValidationMessage For="@(() => registerDTO.Email)" />
    </div>

    <div class="form-group">
        <label for="password">Пароль</label>
        <InputText id="password" type="password" class="form-control" @bind-Value="registerDTO.Password" />
        <ValidationMessage For="@(() => registerDTO.Password)" />
    </div>

    <button type="submit" class="btn btn-primary">Зарегистрироваться</button>

    <p>
        Уже есть аккаунт? <NavLink href="/login">Войти</NavLink>
    </p>
</EditForm>

@code {
    private RegisterDTO registerDTO = new RegisterDTO();
    private string errorMessage;

    private async Task HandleRegister()
    {
        var response = await HttpClient.PostAsJsonAsync("https://localhost:7195/api/Users/register", registerDTO);

        if (response.IsSuccessStatusCode)
        {
            var token = await response.Content.ReadAsStringAsync();
            await LocalStorage.SetItemAsync("token", token);

            Navigation.NavigateTo("/");
        }
        else
        {
            errorMessage = "Ошибка регистрации. Пожалуйста, проверьте введенные данные.";
        }
    }
}